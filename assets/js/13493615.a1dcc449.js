/*! For license information please see 13493615.a1dcc449.js.LICENSE.txt */
"use strict";(self.webpackChunkhaltdos_wiki=self.webpackChunkhaltdos_wiki||[]).push([[99715],{21020:(e,s,r)=>{var t=r(96540),n=Symbol.for("react.element"),o=Symbol.for("react.fragment"),a=Object.prototype.hasOwnProperty,i=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function d(e,s,r){var t,o={},d=null,c=null;for(t in void 0!==r&&(d=""+r),void 0!==s.key&&(d=""+s.key),void 0!==s.ref&&(c=s.ref),s)a.call(s,t)&&!l.hasOwnProperty(t)&&(o[t]=s[t]);if(e&&e.defaultProps)for(t in s=e.defaultProps)void 0===o[t]&&(o[t]=s[t]);return{$$typeof:n,type:e,key:d,ref:c,props:o,_owner:i.current}}s.Fragment=o,s.jsx=d,s.jsxs=d},28366:(e,s,r)=>{r.d(s,{A:()=>t});const t=r.p+"assets/images/login_page_kb_1007_5-1b5ee5ef6b296ade82cc878713581ca5.png"},28453:(e,s,r)=>{r.d(s,{R:()=>a,x:()=>i});var t=r(96540);const n={},o=t.createContext(n);function a(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(o.Provider,{value:s},e.children)}},33371:(e,s,r)=>{r.d(s,{A:()=>t});const t=r.p+"assets/images/upstream_kb_1007_0-a4fc4539033252a32c147cae08ab8086.png"},36991:(e,s,r)=>{r.d(s,{A:()=>t});const t=r.p+"assets/images/upstream_kb_1007_4-3745b9f692a36a5f913d780af6099680.png"},49513:(e,s,r)=>{r.d(s,{A:()=>t});const t=r.p+"assets/images/upstream_kb_1007_2-c74695ddacf06d09297a0048cc5b45c6.png"},74848:(e,s,r)=>{e.exports=r(21020)},89551:(e,s,r)=>{r.d(s,{A:()=>t});const t=r.p+"assets/images/bad_gateway_kb_1007_3-1ec5366cfd63708381dd5b1fad1baf14.png"},93608:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"kb/waf/kb-1007","title":"KB: 1007","description":"----------","source":"@site/versioned_docs/version-7.0/kb/waf/kb-1007.md","sourceDirName":"kb/waf","slug":"/kb/waf/kb-1007","permalink":"/v7/kb/waf/kb-1007","draft":false,"unlisted":false,"tags":[],"version":"7.0","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"kb_sidebar","previous":{"title":"KB: 1006","permalink":"/v7/kb/waf/kb-1006"},"next":{"title":"KB: 1008","permalink":"/v7/kb/waf/kb-1008"}}');var n=r(74848),o=r(28453);const a={sidebar_position:7},i="KB: 1007",l={},d=[{value:"<strong>How to choose server groups based on HTTP request?</strong>",id:"how-to-choose-server-groups-based-on-http-request",level:3},{value:"<strong>Problem Statement</strong>",id:"problem-statement",level:4},{value:"<strong>Solution</strong>",id:"solution",level:4}];function c(e){const s={h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"kb-1007",children:"KB: 1007"})}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h3,{id:"how-to-choose-server-groups-based-on-http-request",children:(0,n.jsx)(s.strong,{children:"How to choose server groups based on HTTP request?"})}),"\n",(0,n.jsx)(s.p,{children:"Haltdos WAF supports the upstream rule. The upstream rule can help the user to forward the request to desired backend server/server group."}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"kb-1007",src:r(33371).A+"",width:"1816",height:"951"})}),"\n",(0,n.jsx)(s.h4,{id:"problem-statement",children:(0,n.jsx)(s.strong,{children:"Problem Statement"})}),"\n",(0,n.jsx)(s.p,{children:"The client wants some requests to be served by one particular server group or DC and other requests to be served by another DC or a different server group."}),"\n",(0,n.jsx)(s.h4,{id:"solution",children:(0,n.jsx)(s.strong,{children:"Solution"})}),"\n",(0,n.jsx)(s.p,{children:"To achieve the above scenario, we can use the upstream rules. Start by simply creating different server groups and servers inside them. No one has to go inside the upstream rule section and create the rule such that one chooses which server group will serve the request and also mentions the condition for the same."}),"\n",(0,n.jsxs)(s.p,{children:[(0,n.jsx)(s.strong,{children:"Steps to Solve"}),":-"]}),"\n",(0,n.jsxs)(s.ol,{children:["\n",(0,n.jsx)(s.li,{children:"First of all we create a server group with desired backend IP. for example our backend."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"kb-1007",src:r(97363).A+"",width:"1816",height:"948"})}),"\n",(0,n.jsxs)(s.ol,{start:"2",children:["\n",(0,n.jsx)(s.li,{children:"We need to make an upstream rule so that desired server will serve the request."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"kb-1007",src:r(49513).A+"",width:"1816",height:"948"})}),"\n",(0,n.jsxs)(s.ol,{start:"3",children:["\n",(0,n.jsx)(s.li,{children:"Now as the website is bound with the false backend server. It'll not be served properly."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"kb-1007",src:r(89551).A+"",width:"1821",height:"946"})}),"\n",(0,n.jsxs)(s.ol,{start:"4",children:["\n",(0,n.jsx)(s.li,{children:"Now if we set the upstream rule upstream to default real server."}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"kb-1007",src:r(36991).A+"",width:"1816",height:"948"})}),"\n",(0,n.jsxs)(s.ol,{start:"5",children:["\n",(0,n.jsx)(s.li,{children:"As a result, now we are able to reach the website as its served by a real backend server/server group"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.img,{alt:"kb-1007",src:r(28366).A+"",width:"1806",height:"981"})}),"\n",(0,n.jsx)(s.p,{children:"Here, we are not able to get the response from the actual server because the end-user request has been served by the correct server group."})]})}function h(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},97363:(e,s,r)=>{r.d(s,{A:()=>t});const t=r.p+"assets/images/servers_kb_1007_1-39d123aa3c69356672ebb7fbc9f07946.png"}}]);