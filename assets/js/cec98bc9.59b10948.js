/*! For license information please see cec98bc9.59b10948.js.LICENSE.txt */
"use strict";(self.webpackChunkhaltdos_wiki=self.webpackChunkhaltdos_wiki||[]).push([[8617],{21020:(e,s,n)=>{var r=n(96540),i=Symbol.for("react.element"),t=Symbol.for("react.fragment"),o=Object.prototype.hasOwnProperty,a=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,l={key:!0,ref:!0,__self:!0,__source:!0};function h(e,s,n){var r,t={},h=null,d=null;for(r in void 0!==n&&(h=""+n),void 0!==s.key&&(h=""+s.key),void 0!==s.ref&&(d=s.ref),s)o.call(s,r)&&!l.hasOwnProperty(r)&&(t[r]=s[r]);if(e&&e.defaultProps)for(r in s=e.defaultProps)void 0===t[r]&&(t[r]=s[r]);return{$$typeof:i,type:e,key:h,ref:d,props:t,_owner:a.current}}s.Fragment=t,s.jsx=h,s.jsxs=h},28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>a});var r=n(96540);const i={},t=r.createContext(i);function o(e){const s=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(t.Provider,{value:s},e.children)}},38502:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"docs/waf/server_group/loadbalancing","title":"Load Balancing","description":"Load Balancing mechanism used for WAF","source":"@site/professional/docs/waf/server_group/loadbalancing.md","sourceDirName":"docs/waf/server_group","slug":"/docs/waf/server_group/loadbalancing","permalink":"/professional/docs/waf/server_group/loadbalancing","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"professional_sidebar","previous":{"title":"Servers","permalink":"/professional/docs/waf/server_group/servers"},"next":{"title":"Monitors","permalink":"/professional/docs/waf/monitors"}}');var i=n(74848),t=n(28453);const o={sidebar_position:3},a="Load Balancing",l={},h=[{value:"Overview",id:"overview",level:2},{value:"Load Balancing Algorithms",id:"load-balancing-algorithms",level:3},{value:"How to Use:",id:"how-to-use",level:3},{value:"Description",id:"description",level:3},{value:"<strong>Upstream Retries</strong>",id:"upstream-retries",level:5},{value:"<strong>Fail-over Threshold</strong>",id:"fail-over-threshold",level:5},{value:"<strong>Client IP Pool</strong>",id:"client-ip-pool",level:5},{value:"<strong>Algorithm</strong>",id:"algorithm",level:5},{value:"<strong>Sticky Session Cookie</strong>",id:"sticky-session-cookie",level:5}];function d(e){const s={h1:"h1",h2:"h2",h3:"h3",h5:"h5",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"load-balancing",children:"Load Balancing"})}),"\n",(0,i.jsx)(s.p,{children:"Load Balancing mechanism used for WAF"}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsx)(s.p,{children:"Load balancing across multiple application instances is a commonly used technique for optimizing resource utilization, maximizing throughput, reducing latency, and ensuring fault-tolerant configurations."}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.img,{alt:"loadbalancing",src:n(54711).A+"",width:"1888",height:"990"}),"\n",(0,i.jsx)(s.img,{alt:"loadbalancing",src:n(65980).A+"",width:"1888",height:"990"})]}),"\n",(0,i.jsx)(s.h3,{id:"load-balancing-algorithms",children:"Load Balancing Algorithms"}),"\n",(0,i.jsx)(s.p,{children:"This field specifies the load balancing algorithm according to the configured website."}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"ROUND ROBIN"}),":\nThis algorithm is a smart approach to distribute client requests across an array of servers. It forwards the client request to each server in turn. Also, assigns a weight to each server as per current load and idle capacity."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"LEAST CONNECTIONS"}),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which has the least no. of active connections on the server."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"LEAST LISTENER CONNECTIONS"}),":\nThis algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have a small response time in order to serve requests."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"LEAST RESPONSE TIME"}),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have a small response time in order to serve requests."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"MINIMUM JITTER"}),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have served the minimum jitter. NOTE: For this algorithm to work, the server group should have ICMP monitor attached."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"IP HASH"}),": This algorithm takes the client's and server's source and destination IP address to generate a unique hash key. This key is used to assign the client to a specific server. In the case of a broken session, the key can be regenerated, and the client can be directed to the same server."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"PERSISTENT HASH"}),": This algorithm takes the user input location within the current request to generate a user-defined custom unique hash key. This key is used to assign the client to a specific server. In the case of a broken session, the key can be regenerated, and the client can be directed to the same server. NOTE: In hashing-based load balancing,  if a specified value does not exists then the request is served on the basis of client's IP address."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Least Requests:"}),"\nThis algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have served the minimum amount of requests."]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"SNMP Metrics"}),": This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which have least CPU / RAM usage. NOTE: For this algorithm to work, the server group should have SNMP monitor attached."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h3,{id:"how-to-use",children:"How to Use:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsx)(s.li,{children:"Log into the Haltdos WAF Professional edition web UI console."}),"\n",(0,i.jsxs)(s.li,{children:["Then go to ",(0,i.jsx)(s.strong,{children:"Listeners"})," > ",(0,i.jsx)(s.strong,{children:"Server Groups"})," > ",(0,i.jsx)(s.strong,{children:"Load Balancing"})]}),"\n",(0,i.jsxs)(s.li,{children:["Set the configurations and ",(0,i.jsx)(s.strong,{children:"Save Changes"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Parameters"}),(0,i.jsx)(s.th,{children:"Accepted Values"}),(0,i.jsx)(s.th,{children:"Default"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Upstream Retries This algorithm is a dynamic load balancing algorithm. It forwards client requests to the server, which has the least no. of active connections to the back-end server."}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"1"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Fail-over Threshold"}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"50"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Client IP Pool"}),(0,i.jsx)(s.td,{children:"Integer"}),(0,i.jsx)(s.td,{children:"Blank"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Algorithm"}),(0,i.jsx)(s.td,{children:"Algorithm Drop-down"}),(0,i.jsx)(s.td,{children:"ROUND ROBIN"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Sticky Session Cookie"}),(0,i.jsx)(s.td,{children:"String"}),(0,i.jsx)(s.td,{children:"Blank"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Add location"}),(0,i.jsx)(s.td,{children:"String & Integer"}),(0,i.jsx)(s.td,{children:"This toggle button allows you to enable the Web-socket support for servers in the server group.None & Src IP"})]})]})]}),"\n",(0,i.jsx)(s.h3,{id:"description",children:"Description"}),"\n",(0,i.jsx)(s.h5,{id:"upstream-retries",children:(0,i.jsx)(s.strong,{children:"Upstream Retries"})}),"\n",(0,i.jsx)(s.p,{children:"This option used to specify the upstream retries. By default, the value is set to 1."}),"\n",(0,i.jsx)(s.h5,{id:"fail-over-threshold",children:(0,i.jsx)(s.strong,{children:"Fail-over Threshold"})}),"\n",(0,i.jsx)(s.p,{children:"This option specify the fail-over threshold in percentage of (active/total) primary servers for switching to backup servers. By default, the value is set to 50%."}),"\n",(0,i.jsx)(s.h5,{id:"client-ip-pool",children:(0,i.jsx)(s.strong,{children:"Client IP Pool"})}),"\n",(0,i.jsx)(s.p,{children:"Specify list of client IP to use when connecting to upstream. Leave blank for auto"}),"\n",(0,i.jsx)(s.h5,{id:"algorithm",children:(0,i.jsx)(s.strong,{children:"Algorithm"})}),"\n",(0,i.jsx)(s.p,{children:"This option is used to specify the algorithm used by the server group. By default, the value is selected as Round Robin."}),"\n",(0,i.jsx)(s.h5,{id:"sticky-session-cookie",children:(0,i.jsx)(s.strong,{children:"Sticky Session Cookie"})}),"\n",(0,i.jsx)(s.p,{children:"Specify enabling sticky session based on specified cookie"})]})}function c(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},54711:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/load_balancing1-2d0b2a06911b8205a592b4e6320a7479.png"},65980:(e,s,n)=>{n.d(s,{A:()=>r});const r=n.p+"assets/images/load_balancing2-8f182e400659b93c9b1d5056462e42ff.png"},74848:(e,s,n)=>{e.exports=n(21020)}}]);